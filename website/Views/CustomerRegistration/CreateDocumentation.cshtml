@model website.Dto.DocumentationDTO

@{
    ViewData["Title"] = "Index";
    Layout = null;
}

@using (Html.BeginForm("CreateDocumentation",
    "CustomerRegistration", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>DocumentationDTO</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AadharCardNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AadharCardNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AadharCardNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">AadharCard Image</label>
            <div class="col-md-10">
                <input type="file" name="AadharCardImagePathFile" id="AadharCardImagePathFile" />
                @if (Model != null)
                {
                    <input type="hidden" id="AadharCardImagePath" name="AadharCardImagePath" value="@Model.AadharCardImagePath" />
                }
                @Html.ValidationMessageFor(model => model.AadharCardImagePath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PancardNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PancardNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PancardNo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Pancard Image</label><span><img src="~/App_Data/Pancards/@(Model != null ? Model.PancardImagePath : "~/Content/Images/NoImage.jpg")" style="width:20%;" /></span>
            @*<img src="~/Content/Images/NoImage.jpg" />*@
            <div class="col-md-10">
                <input type="file" name="PancardImagePathFile" id="PancardImagePathFile" />
                @if (Model != null)
                {
                    <input type="hidden" id="PancardImagePath" name="PancardImagePath" value="@Model.PancardImagePath" />
                }
                @Html.ValidationMessageFor(model => model.PancardImagePathFile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BankAccountNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BankAccountNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BankAccountNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IFSCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IFSCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IFSCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">PassBook Image</label>
            <div class="col-md-10">
                <input type="file" name="PassBookImgPathFile" id="PassBookImgPathFile" />
                @if (Model != null)
                {
                    <input type="hidden" id="PassBookImgPath" name="PassBookImgPath" value="@(Model.PassBookImgPath != null ? Model.PassBookImgPath : null)" />
                }
                @Html.ValidationMessageFor(model => model.PassBookImgPath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">CheckBooK Image</label>
            <div class="col-md-10">
                <input type="file" name="CheckBooKImgPathFile" id="CheckBooKImgPathFile" />
                @if (Model != null)
                {
                    <input type="hidden" id="CheckBooKImgPath" name="CheckBooKImgPath" value="@(Model.CheckBooKImgPath != null ? Model.CheckBooKImgPath : null)" />
                }
                @Html.ValidationMessageFor(model => model.CheckBooKImgPath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Profile Image</label>
            <div class="col-md-10">
                <input type="file" name="ProfileImgPathFile" id="ProfileImgPathFile" />
                @if (Model != null)
                {
                    <input type="hidden" id="ProfileImgPath" name="ProfileImgPath" value="@(Model.ProfileImgPath != null ? Model.ProfileImgPath : null)" />
                }
                @Html.ValidationMessageFor(model => model.ProfileImgPath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
